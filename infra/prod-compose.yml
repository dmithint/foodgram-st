services:
  db:
    container_name: foodgram-db
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-backend
    image: dmithint/foodgram-backend:latest
    restart: always
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media
#    volumes:
#      - static_volume:/app/collected_static
#      - static_volume:/app/static  # Для статики Django
#      - media_volume:/app/media    # Для медиа файлов
    depends_on:
      db:
        condition: service_healthy
    env_file: .env


  frontend:
    image: dmithint/foodgram-frontend
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static
#  frontend:
#    container_name: foodgram-frontend
#    image: dmithint/foodgram-frontend:latest
#    volumes:
#      - frontend_static:/frontend_static  # Статика React
#    env_file: .env

  gateway:
    container_name: foodgram-gateway
    image: dmithint/foodgram-gateway:latest
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - static_volume:/staticfiles
      - media_volume:/media
#    volumes:
#      - static_volume:/backend_static  # Статика Django
#      - media_volume:/backend_media    # Медиа Django
#      - frontend_static:/frontend_static  # Статика React

volumes:
  postgres_data:
  static_volume:  # Статика Django (admin, DRF)
  media_volume:    # Медиа файлы Django
  frontend_static: # Собранные файлы фронтенда


#services:
#
#  db:
#    container_name: foodgram-db
#    image: postgres:13
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    environment:
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    ports:
#      - "5000:5432"
#    env_file: .env
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  backend:
#    container_name: foodgram-backend
#    image: dmithint/foodgram-backend:latest
#    restart: always
#    volumes:
#      - static_volume:/app/static
#      - media_volume:/app/media
#    depends_on:
#      db:
#        condition: service_healthy
#    env_file: .env
#
#  frontend:
#    container_name: foodgram-frontend
#    image: dmithint/foodgram-frontend:latest
#    env_file: .env
#    command: cp -r /app/build/. /frontend_static/
#    volumes:
#      - static:/frontend_static
#
#  gateway:
#    image: rodomir117/foodgram_gateway
#    env_file: .env
#    depends_on:
#      - backend
#      - frontend
#    volumes:
#      - static:/staticfiles
#      - media:/media
#    ports:
#      - "80:80"
#
#
#volumes:
#  postgres_data:
#  static_volume:
#  media_volume:
