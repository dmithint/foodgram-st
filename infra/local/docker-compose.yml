services:
  db:
    container_name: foodgram-db
    image: postgres:13
    ports:
      - "5000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-backend
    build: ../../backend
    restart: always
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file: .env

  frontend:
    container_name: foodgram-frontend
    build: ../../frontend
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static

  nginx:
    container_name: foodgram-gateway
    image: nginx:1.25.4-alpine
    volumes:
      - static_volume:/staticfiles
      - media_volume:/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../../docs/:/usr/share/nginx/html/redoc/
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
