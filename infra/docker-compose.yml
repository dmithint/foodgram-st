version: '3.8'

services:
  db:
    container_name: foodgram-db
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-back
    build: ../backend
    restart: always
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env


  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    volumes:
      - static_volume:/var/html/static
      - media_volume:/var/html/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:



#version: '3.3'
#services:
#
#  frontend:
#    container_name: foodgram-front
#    build: ../frontend
#    volumes:
#      - ../frontend/:/app/result_build/
#  nginx:
#    container_name: foodgram-proxy
#    image: nginx:1.25.4-alpine
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - ../frontend/build:/usr/share/nginx/html/
#      - ../docs/:/usr/share/nginx/html/api/docs/
