services:
  db:
    container_name: foodgram-db
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-backend
    image: dmithint/foodgram-backend:latest
    restart: always
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file: .env


  frontend:
    container_name: foodgram-frontend
    image: dmithint/foodgram-frontend:latest
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static

  gateway:
    container_name: foodgram-gateway
    image: dmithint/foodgram-gateway:latest
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - static_volume:/staticfiles
      - media_volume:/media

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_static:
