---
name: Foodgram workflow

on:
  push:
    branches:
      - main
      - test

jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.9
#          cache: 'pip'
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r ./backend/requirements.lint.txt
#      - name: Run flake8
#        run: python -m flake8 backend/

#  tests:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:13.10
#        env:
#          POSTGRES_USER: django_user
#          POSTGRES_PASSWORD: django_password
#          POSTGRES_DB: django_db
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.9
#          cache: 'pip'
#      - name: Copy requirements.txt
#        run: cp ./backend/requirements.txt ./requirements/requirements.txt
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r ./requirements/requirements.txt
#      - name: Run Django tests
#        env:
#          POSTGRES_USER: django_user
#          POSTGRES_PASSWORD: django_password
#          POSTGRES_DB: django_db
#          DB_HOST: localhost
#          DB_PORT: 5432
#        run: |
#          cd backend/
#          python manage.py test

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
#    if: github.ref == 'refs/heads/main'
#    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./gateway/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram-gateway:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/foodgram-gateway:latest


  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy prod-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.USER_PASSWORD }}
          source: infra/prod-compose.yml
          target: foodgram
          strip_components: 1
          overwrite: true

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.USER_PASSWORD }}
          script: |
            cd foodgram
            sudo docker compose -f prod-compose.yml pull
            sudo docker compose -f prod-compose.yml down
            sudo docker compose -f prod-compose.yml up -d
            sudo docker image prune -af


  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "NORM DEPLOY"
